'use client'

import './globals.css'
// eslint-disable-next-line camelcase
import { Bebas_Neue } from 'next/font/google'
import { createTheme, NextUIProvider, useSSR } from '@nextui-org/react'
import { colors } from '../constants/constants.js'
import Link from 'next/link'
import { CustomTriggerDropDown } from '../components/dropdown/customTriggerDropDown.jsx'
import { CustomDropDown } from '../components/dropdown/customDropDown.jsx'
import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { useStore } from '../store/store.js'

const bebasNeue = Bebas_Neue({
  weight: '400',
  style: ['normal'],
  subsets: ['latin']
})

const theme = createTheme({
  type: 'light', // it could be "light" or "dark"
  theme: {
    colors: {
      primary: '#5ba176',
      primaryShadow: '#5ba176',
      primaryLight: '#5ba17650',
      primaryLightContrast: '#141414',
      secondary: '#e9aa45',
      secondaryLight: '#e9aa4550',
      success: '#5470C6',
      successLight: '#5470C650',
      quaternary: '#fafafa',
      quinary: '#141414',
      sectary: '#E66765',
      sectaryLight: '#E6676550',
      septenary: '#8A2BE2',
      septenaryLight: '#8A2BE250',
      eightieth: '#FF9966',
      eightiethLight: '#FF996650',
      gradient: 'linear-gradient(112deg, $blue100 -25%, $pink500 -10%, $purple500 80%)',
      myColor: '#ff4ecd'
    },
    space: {},
    fonts: {}
  }
})

// export const metadata = {
//   title: 'Datalab',
//   description: 'Generated by create next app'
// }

const RootLayout = ({ children }) => {
  const router = useRouter()
  const { isBrowser } = useSSR()
  const { setBasePlayer, databases, setSelectedPath, selectedDatabase, setSelectedDatabase, selectedPath, setDatabase, database } = useStore()
  const [filteredPlayers, setFilteredPlayers] = useState(database)

  const handleChange = (e) => {
    e.preventDefault()
    const { value } = e.target

    const normalizedValue = value
      .normalize('NFD')
      .replace(/[\u0300-\u036f]/g, '')
    const filteredItems = database
      .filter((p) => {
        const normalizedName = p.name
          .normalize('NFD')
          .replace(/[\u0300-\u036f]/g, '')
        return normalizedName
          .toLowerCase()
          .includes(normalizedValue.toLowerCase())
      })
      .map((p) => p)

    setFilteredPlayers(filteredItems)
  }

  const handleSetItem = (item) => {
    setSelectedDatabase(item)
    setSelectedPath(item.file)
  }

  useEffect(() => {
    if (selectedPath) {
      import(`../../constants${selectedPath}`)
        .then((module) => {
          setDatabase(module.default)
        })
        .catch((error) => {
          console.error('Error importing data:', error)
        })
    }
  }, [selectedPath])

  return (
    <html lang='en'>
      <body className={bebasNeue.className}>
        {isBrowser && (
          <>
            <header className='flex justify-between items-center px-4 sm:px-8 pt-4 sm:pt-8'>
              <Link href='/'>
                <h1 className='flex flex-grow-0 text-primary text-xl sm:text-2xl tracking-normal cursor-pointer'>
                  Datamoroni
                </h1>
              </Link>
              <CustomTriggerDropDown
                key='players'
                items={filteredPlayers}
                ripple={false}
                css={{ fontSize: '20px', fontWeight: 'bold' }}
                selectedItem={null}
                onAction={(key) => {
                  const player = database.find(player => player.key.toString() === key)
                  setBasePlayer(player)
                  router.push('/playerInfo')
                }}
                width='100%'
              >
                <input
                  className='rounded-xl border-transparent bg-gray-100 px-3 py-1 text-base w-80 sm:text-xl focus:border-primary outline-none border-4 transition-all duration-500'
                  placeholder='Search player'
                  type='search'
                  onChange={handleChange}
                />
              </CustomTriggerDropDown>
              <div className='flex'>
                <CustomDropDown
                  items={databases}
                  ripple={false}
                  css={{ fontSize: '16px', fontWeight: 'bold' }}
                  selectedItem={selectedDatabase?.name}
                  handleSetItem={handleSetItem}
                  selectText='Select database'
                />
              </div>
            </header>
            <NextUIProvider theme={theme}>{children}</NextUIProvider>
          </>
        )}
      </body>
    </html>
  )
}

export default RootLayout
